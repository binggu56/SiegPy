{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Time propagation: error estimation of the Siegert states expansions\n",
    "\n",
    "The `time_propagation_initial_momentum.ipynb` notebook showed the overcompleteness of the Siegert states basis set, where we saw that the Berggren expansion and the one presented in [Santra et al., *PRA* **71** (2005)](http://link.aps.org/doi/10.1103/PhysRevA.71.032703) give almost similar results.\n",
    "\n",
    "The goal of this notebook is to assert the quality of different Siegert states expansion when it comes to evaluate the time-propagation of an initial wavepacket. The same initial wave-packets as in the previous notebook will be used: the interest of the present notebook is only to quantify what was presented in the previous one.\n",
    "\n",
    "Three different Siegert states expansions will be considered: the Mittag-Leffler expansion (MLE), the Berggren expansion and the exact Siegert states expansion (see notebook `time_propagation.ipynb` for more details on these expansions). They will be compared to the exact time-propagation using the continuum states."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Initialization\n",
    "\n",
    "### Import useful modules and classes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Make the notebook aware of some of the SiegPy module classes\n",
    "from siegpy import SWPBasisSet, Gaussian, SWPotential\n",
    "# Other imports\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Define functions to estimate and show the errors\n",
    "\n",
    "The absolute and relative errors of different Siegert states expansions with respect to the reference result using bound and continuum states are computed for various times."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def print_errors(exact, siegert_exp, dx):\n",
    "    \"\"\"\n",
    "    Function printing the absolute and relative error of a given \n",
    "    Siegert states expansion of the time propagation of a wave-packet\n",
    "    for different times.\n",
    "    \n",
    "    :param exact: Exact time-propagation of a wavepacket.\n",
    "    :type exact: 2D numpy.array\n",
    "    :param siegert_exp: Siegert states expansion of the time-\n",
    "                        propagation of the same wavepacket.\n",
    "    :type siegert_exp: 2D numpy.array\n",
    "    :param dx: Space grid-step.\n",
    "    :type: float\n",
    "    \"\"\"\n",
    "    # Print lines to initialize the table\n",
    "    title = \"  t    abs. error   rel. error\"\n",
    "    line = \"-\"*len(title)\n",
    "    print(line)\n",
    "    print(title)\n",
    "    print(line)\n",
    "    # Get the error estimations for each time\n",
    "    for i, t in enumerate(time_grid):\n",
    "        abs_err = np.trapz(np.abs(exact[i] - siegert_exp[i]), dx=dx)\n",
    "        norm = np.trapz(np.abs(exact[i]), dx=dx)\n",
    "        #abs_err = np.trapz(np.abs(exact[i] - siegert_exp[i])**2, dx=dx)\n",
    "        #norm = np.trapz(np.abs(exact[i])**2, dx=dx)\n",
    "        rel_err = abs_err / norm\n",
    "        print(\"{:.2f}   {: .3e}   {: .3e}\".format(t, abs_err, rel_err))\n",
    "    # Print lines to finalize the table\n",
    "    print(line)\n",
    "    print()\n",
    "    \n",
    "    \n",
    "def SSE_errors(filename, nres, k_max, h_k, nx, test_func, time_grid, \n",
    "               exact=True, MLE=True, Ber=True):\n",
    "    \"\"\"\n",
    "    Function performing the time-propagation of an initial wave-packet\n",
    "    using different Siegert states expansions and printing the absolute \n",
    "    and relative errors when compared to the exact time-propagation of \n",
    "    this initial wavepacket. \n",
    "    \n",
    "    :param filename: Name of the file where to look for the Siegert states.\n",
    "    :type filename: str\n",
    "    :param nres: Number of resonant states to use in the Siegert states expansions.\n",
    "    :type nres: int\n",
    "    :param k_max: Wavenumber of the last continuum state involved in the exact calculations.\n",
    "    :type k_max: float\n",
    "    :param h_k: Wavenumber grid step of the continuum basis set.\n",
    "    :type h_k: float\n",
    "    :param nx: Number of space grid points.\n",
    "    :type nx: int\n",
    "    :param test_func: Initial wave-packet.\n",
    "    :type test_func: Wavefunction\n",
    "    :param time_grid: Times at which the\n",
    "    :type time_grid: list or numpy.array\n",
    "    :param choice: Optional, used to say which Siegert state expansion is desired.\n",
    "    :type choice: dict\n",
    "    \"\"\"\n",
    "    # Siegert states basis set initialized from a file\n",
    "    siegerts = SWPBasisSet.from_file(filename, nres=nres)\n",
    "    \n",
    "    # Read the potential from a data file\n",
    "    potential = siegerts[0].potential\n",
    "    l = potential.width\n",
    "    \n",
    "    # Define a grid space\n",
    "    xgrid = np.linspace(-l/2, l/2, nx)\n",
    "    dx = xgrid[1] - xgrid[0]\n",
    "    \n",
    "    # Discretize the Siegert states over the grid\n",
    "    for s in siegerts:\n",
    "        s.grid = xgrid\n",
    "\n",
    "    # Exact basis set\n",
    "    cont = SWPBasisSet.find_continuum_states(potential, k_max, h_k, grid=xgrid)\n",
    "    exact = cont + siegerts.bounds\n",
    "\n",
    "    # Evaluation of the exact time propagation\n",
    "    exact_tp = exact.exact_propagation(test_func, time_grid)\n",
    "    \n",
    "    if exact:\n",
    "        # Evaluation of the exact Siegert expansion of the time propagation\n",
    "        exact_S_tp = siegerts.exact_Siegert_propagation(test_func, time_grid)\n",
    "        # Find the error with respect ot the exact time propagation\n",
    "        print(\"         Exact Siegert\")\n",
    "        print_errors(exact_tp, exact_S_tp, dx)\n",
    "\n",
    "    if MLE:\n",
    "        # Evaluation of the Mittag-Leffler expansion of the time propagation\n",
    "        MLE_tp = siegerts.MLE_propagation(test_func, time_grid)\n",
    "        # Find the error with respect ot the exact time propagation\n",
    "        print(\"              MLE\")\n",
    "        print_errors(exact_tp, MLE_tp, dx)\n",
    "\n",
    "    if Ber:\n",
    "        # Evaluation of the Berggren expansion of the time propagation\n",
    "        Ber_tp = siegerts.Berggren_propagation(test_func, time_grid)       \n",
    "        # Find the error with respect ot the exact time propagation \n",
    "        print(\"            Berggren\")\n",
    "        print_errors(exact_tp, Ber_tp, dx)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Define the filename of the data file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Siegert states basis set initialized from a file\n",
    "filename = 'siegerts.dat'\n",
    "siegerts = SWPBasisSet.from_file(filename)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Case 1: initial wave-packet with a small initial momentum\n",
    "\n",
    "The first initial wave-packet considered uses a small initial momentum."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Define the test function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "l = siegerts.potential.width  # width of the potential\n",
    "sigma = l/20.  # width of the Gaussian\n",
    "x_c   = -l/4.  # center of the Gaussian\n",
    "k_0   = 1.  # initial momentum\n",
    "gauss_small_momentum = Gaussian(sigma, x_c, k0=k_0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Estimation of the errors of the Siegert states expansions\n",
    "\n",
    "As a starting point, let us use parameters allowing for a moderate accuracy of the error measurements. The Siegert states and the exact basis sets have a close extension ($|k_{res, max}| \\approx k_{max}$) and the space grid is made of a limited number of points."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "keep_output": true,
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Exact Siegert\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    8.722e-06    1.566e-05\n",
      "0.25    6.219e-07    5.567e-07\n",
      "0.50    4.425e-07    3.656e-07\n",
      "0.75    3.630e-07    3.132e-07\n",
      "1.00    3.156e-07    2.864e-07\n",
      "2.00    2.260e-07    2.090e-07\n",
      "3.00    1.863e-07    1.684e-07\n",
      "------------------------------\n",
      "\n",
      "              MLE\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    8.722e-06    1.566e-05\n",
      "0.25    6.329e-01    5.665e-01\n",
      "0.50    2.953e+03    2.441e+03\n",
      "0.75    9.029e+08    7.791e+08\n",
      "1.00    3.302e+14    2.996e+14\n",
      "2.00    5.546e+36    5.130e+36\n",
      "3.00    9.162e+58    8.281e+58\n",
      "------------------------------\n",
      "\n",
      "            Berggren\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    1.575e-01    2.828e-01\n",
      "0.25    7.557e-02    6.764e-02\n",
      "0.50    4.717e-02    3.898e-02\n",
      "0.75    3.292e-02    2.841e-02\n",
      "1.00    2.455e-02    2.228e-02\n",
      "2.00    1.082e-02    1.001e-02\n",
      "3.00    6.360e-03    5.749e-03\n",
      "------------------------------\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Definition of the time grid\n",
    "time_grid = [0.0, 0.25, 0.5, 0.75, 1.0, 2.0, 3.0]\n",
    "\n",
    "SSE_errors(filename, 50, 40, 0.01, 201, gauss_small_momentum, time_grid)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let us see the influence of using denser wavenumber and space grids, that should give more accurate results:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "keep_output": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Exact Siegert\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    8.562e-06    1.538e-05\n",
      "0.25    6.024e-07    5.392e-07\n",
      "0.50    4.262e-07    3.522e-07\n",
      "0.75    3.481e-07    3.004e-07\n",
      "1.00    3.016e-07    2.736e-07\n",
      "2.00    2.136e-07    1.976e-07\n",
      "3.00    1.746e-07    1.578e-07\n",
      "------------------------------\n",
      "\n",
      "              MLE\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    8.562e-06    1.538e-05\n",
      "0.25    6.329e-01    5.665e-01\n",
      "0.50    2.953e+03    2.440e+03\n",
      "0.75    9.028e+08    7.791e+08\n",
      "1.00    3.302e+14    2.996e+14\n",
      "2.00    5.545e+36    5.130e+36\n",
      "3.00    9.160e+58    8.280e+58\n",
      "------------------------------\n",
      "\n",
      "            Berggren\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    1.574e-01    2.828e-01\n",
      "0.25    7.556e-02    6.764e-02\n",
      "0.50    4.717e-02    3.897e-02\n",
      "0.75    3.292e-02    2.840e-02\n",
      "1.00    2.455e-02    2.228e-02\n",
      "2.00    1.082e-02    1.001e-02\n",
      "3.00    6.360e-03    5.749e-03\n",
      "------------------------------\n",
      "\n"
     ]
    }
   ],
   "source": [
    "SSE_errors(filename, 50, 40, 0.005, 1601, gauss_small_momentum, time_grid)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As you can see, the previous results were almost converged: the evaluation of the erros is only slightly modified by the densification of the grids (especially for the exact Siegert states expansion). \n",
    "\n",
    "Combining the use of denser wavenumber and space grids grids with an increase of the range of the continuum states wavenumber grid (associated to an increase of the number of resonant couples), the results should be even more accurate:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "keep_output": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Exact Siegert\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    8.542e-06    1.534e-05\n",
      "0.25    6.023e-07    5.391e-07\n",
      "0.50    4.261e-07    3.521e-07\n",
      "0.75    3.481e-07    3.004e-07\n",
      "1.00    3.016e-07    2.736e-07\n",
      "2.00    2.136e-07    1.976e-07\n",
      "3.00    1.746e-07    1.578e-07\n",
      "------------------------------\n",
      "\n",
      "              MLE\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    8.542e-06    1.534e-05\n",
      "0.25    6.873e+01    6.153e+01\n",
      "0.50    1.511e+11    1.248e+11\n",
      "0.75    5.496e+20    4.743e+20\n",
      "1.00    1.836e+30    1.665e+30\n",
      "2.00    1.995e+68    1.845e+68\n",
      "3.00    2.288e+106    2.069e+106\n",
      "------------------------------\n",
      "\n",
      "            Berggren\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    1.574e-01    2.828e-01\n",
      "0.25    7.556e-02    6.764e-02\n",
      "0.50    4.717e-02    3.897e-02\n",
      "0.75    3.292e-02    2.840e-02\n",
      "1.00    2.455e-02    2.228e-02\n",
      "2.00    1.082e-02    1.001e-02\n",
      "3.00    6.360e-03    5.749e-03\n",
      "------------------------------\n",
      "\n"
     ]
    }
   ],
   "source": [
    "SSE_errors(filename, 78, 60, 0.005, 1601, gauss_small_momentum, time_grid)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The errors Berggren and the Siegert states expansion are the same as earlier, showing that the results are converged in terms of the extension of the basis sets. However, the MLE is even more wrong, and diverges even more badly; this is not a surprise, since more divergent terms are added in the sum.\n",
    "\n",
    "We are now convinced that the error evaluation is sufficiently converged for our purpose. As expected, the results give the same conclusions as in the previous notebook:\n",
    "\n",
    "* It is clear that the MLE diverges in the long time limit.\n",
    "\n",
    "* The exact Siegert states expansion produces the best result, whatever the time.\n",
    "\n",
    "* The errors induced by the use of the Berggren expansion decreases over time, making it a rather good expansion in the long-time limit, but not as good as the exact Siegert states expansion."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Case 2: initial wave-packet with large initial momentum\n",
    "\n",
    "We saw in the previous notebook that the Berggren expansion was very good for all times in the case of an initial wave-packet with a large initial momentum. What are the relative and absolute errors in that case?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Define the test function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "k_0 = 20.  # initial momentum\n",
    "gauss_large_momentum = Gaussian(sigma, x_c, k0=k_0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Estimation of the errors of the Siegert states expansions\n",
    "\n",
    "We start with the same parameters leading to moderate accuracy results:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "keep_output": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Exact Siegert\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    1.441e-04    2.588e-04\n",
      "0.25    5.216e-06    5.375e-05\n",
      "0.50    4.181e-06    3.773e-04\n",
      "0.75    3.731e-06    1.190e-03\n",
      "1.00    3.338e-06    2.036e-03\n",
      "2.00    2.074e-06    2.424e-03\n",
      "3.00    1.822e-06    1.985e-03\n",
      "------------------------------\n",
      "\n",
      "              MLE\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    1.441e-04    2.588e-04\n",
      "0.25    2.464e+02    2.539e+03\n",
      "0.50    5.505e+06    4.969e+08\n",
      "0.75    7.641e+11    2.438e+14\n",
      "1.00    3.037e+17    1.852e+20\n",
      "2.00    4.225e+39    4.939e+42\n",
      "3.00    7.028e+61    7.657e+64\n",
      "------------------------------\n",
      "\n",
      "            Berggren\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    5.335e-04    9.582e-04\n",
      "0.25    2.731e-04    2.814e-03\n",
      "0.50    1.774e-04    1.601e-02\n",
      "0.75    1.270e-04    4.053e-02\n",
      "1.00    9.689e-05    5.911e-02\n",
      "2.00    4.642e-05    5.427e-02\n",
      "3.00    2.899e-05    3.158e-02\n",
      "------------------------------\n",
      "\n"
     ]
    }
   ],
   "source": [
    "SSE_errors(filename, 50, 40, 0.01, 201, gauss_large_momentum, time_grid)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Using denser wavenumber and space grids, we show that the previous results could already be considered as almost converged with respect to those parameters:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "keep_output": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Exact Siegert\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    1.440e-04    2.586e-04\n",
      "0.25    5.207e-06    5.365e-05\n",
      "0.50    4.216e-06    3.806e-04\n",
      "0.75    3.762e-06    1.201e-03\n",
      "1.00    3.340e-06    2.037e-03\n",
      "2.00    2.099e-06    2.454e-03\n",
      "3.00    1.772e-06    1.931e-03\n",
      "------------------------------\n",
      "\n",
      "              MLE\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    1.440e-04    2.586e-04\n",
      "0.25    2.464e+02    2.539e+03\n",
      "0.50    5.505e+06    4.969e+08\n",
      "0.75    7.639e+11    2.438e+14\n",
      "1.00    3.036e+17    1.852e+20\n",
      "2.00    4.225e+39    4.939e+42\n",
      "3.00    7.027e+61    7.656e+64\n",
      "------------------------------\n",
      "\n",
      "            Berggren\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    5.332e-04    9.575e-04\n",
      "0.25    2.731e-04    2.815e-03\n",
      "0.50    1.774e-04    1.602e-02\n",
      "0.75    1.270e-04    4.053e-02\n",
      "1.00    9.690e-05    5.911e-02\n",
      "2.00    4.643e-05    5.427e-02\n",
      "3.00    2.899e-05    3.158e-02\n",
      "------------------------------\n",
      "\n"
     ]
    }
   ],
   "source": [
    "SSE_errors(filename, 50, 40, 0.005, 1601, gauss_large_momentum, time_grid)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The impact of these parameters (wavenumber and space grid densities) is smaller than in the case of an initial wavepacket with a smaller initial momentum. The previous results could already be considered as converged with respect to those parameters.\n",
    "\n",
    "Finally, increasing the number of states while using the dense wavenumber and space grids lead to the following results:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "keep_output": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Exact Siegert\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    1.522e-05    2.733e-05\n",
      "0.25    7.945e-07    8.187e-06\n",
      "0.50    5.606e-07    5.060e-05\n",
      "0.75    4.574e-07    1.460e-04\n",
      "1.00    3.960e-07    2.416e-04\n",
      "2.00    2.799e-07    3.271e-04\n",
      "3.00    2.285e-07    2.489e-04\n",
      "------------------------------\n",
      "\n",
      "              MLE\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    1.522e-05    2.733e-05\n",
      "0.25    2.767e+02    2.851e+03\n",
      "0.50    1.249e+11    1.127e+13\n",
      "0.75    4.538e+20    1.448e+23\n",
      "1.00    1.517e+30    9.255e+32\n",
      "2.00    1.649e+68    1.928e+71\n",
      "3.00    1.892e+106    2.061e+109\n",
      "------------------------------\n",
      "\n",
      "            Berggren\n",
      "------------------------------\n",
      "  t    abs. error   rel. error\n",
      "------------------------------\n",
      "0.00    4.602e-04    8.264e-04\n",
      "0.25    2.731e-04    2.815e-03\n",
      "0.50    1.774e-04    1.602e-02\n",
      "0.75    1.270e-04    4.052e-02\n",
      "1.00    9.689e-05    5.910e-02\n",
      "2.00    4.643e-05    5.428e-02\n",
      "3.00    2.899e-05    3.158e-02\n",
      "------------------------------\n",
      "\n"
     ]
    }
   ],
   "source": [
    "SSE_errors(filename, 78, 60, 0.005, 1601, gauss_large_momentum, time_grid)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "These parameters impact the quality of the error, especially for short time. This is not suprising because the completeness relation for the intitial wave-packet with a larger initial momentum converges at a larger wavenumber (see the previous notebook): the convergence with respect to the highest wavenumber of the basis set is more difficult to reach.\n",
    "\n",
    "The results point to the same conclusions as in the first case, mainly showing that even if the Berggren expansion is in very good agreement for all times, the exact Siegert states gives better results."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    "\n",
    "This concludes our study of the error estimation, showing that the exact Siegert state expansion truly is the most efficient when it comes to reproduce the time propagation of wavepacket, whatever the time and the wavepacket. \n",
    "\n",
    "For more details on the convergence of the error estimation with respect to the different parameters, you might consider going through the `time_propagation_error_estimation_convergence.ipynb` notebook."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
